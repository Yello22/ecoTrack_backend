// schema.prisma


generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String  @id @default(uuid())
  email     String  @unique
  phone     String?
  firstName String?
  lastName  String?
  password  String
  roles     Roles[]   @default([customer])

  tutorials   Tutorials?   @relation(fields: [tutorialsId], references: [id])
  simulations Simulation[]
  tutorialsId String?      @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  deletedAt DateTime?
}

model TokenWhiteList {
  id             String  @id @default(uuid())
  userId         String
  accessToken    String?
  refreshToken   String?
  refreshTokenId String?
  expiredAt      DateTime
  createdAt      DateTime @default(now())
  updatedAt      DateTime @default(now())
}

enum Roles {
  admin
  customer
}

model Tutorials {
  id               String  @id @default(uuid())
  testIntro        Boolean
  scoreExplanation Boolean

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  deletedAt DateTime?

  user User?
  userId            String
}

model Simulation {
  id                String           @id @default(uuid())
  situation         Json
  foldedSteps       String[]
  actionChoices     Json
  computedResults   Json
  progression       Float
  user              User             @relation(fields: [userId], references: [id])
  userId            String

  date      DateTime

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  deletedAt DateTime?
}
